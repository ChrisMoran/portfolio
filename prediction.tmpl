<html>
<head>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js" type="text/javascript"></script>
<script type="text/javascript" src="jquery.flot.js"> </script>
<link href="bootstrap/css/bootstrap.min.css" rel="stylesheet" media="screen"/>
<script type="text/javascript" src="bootstrap/js/bootstrap.min.js"></script>
<link href="common.css" rel="stylesheet" media="screen"/>
</head>
<body>
<div class="navbar navbar-inverse navbar-fixed-top" style="margin-bottom: 20px;"><div class="navbar-inner">
<div class="container"><a class=\"brand\" href="#">Portfolio Manager</a><ul class=\"nav\">
<li><a href="userHome.pl">Home</a></li><li><a href="logout.pl">Logout</a></li></ul></div></div></div>


<div class="pageRoot">
<h1>Future Prices Predictions</h1>
<h2><TMPL_VAR NAME=SYMBOL></h2>
<div id='plot-placeholder'style="width:600px;height:300px">

</div>
<p>We're currently using a time series predictor.</p>
<input class="interval-rb" type="radio" name="group1" value="5" checked='true'/> 5-day
<input class="interval-rb" type="radio" name="group1" value="10"/> 10-day
<input class="interval-rb" type="radio" name="group1" value="30"/> 30-day
<input class="interval-rb" type="radio" name="group1" value="60"/> 60-day
<input class="interval-rb" type="radio" name="group1" value="120"/> 120-day
</div>
<script>
//Helper to get an URL parameter
function getURLParameter(name) {
	return decodeURI(
		(RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, null])[1]);
}
foo = 0
	row = []
function startPlotting() {
	row = []
	var length = $('.interval-rb:checked').val();
	console.log(length);
	console.log("startgetting");
	symbol = getURLParameter("symbol");
	//definitely not returning json. ugly
	//callback not working. keep async false to use foo.
	foo = $.ajax({
			url : 'prediction-json.pl',
			data : {
				"symbol" : symbol,
				"length" : length
			},
			async : false
		});
	//get all rows
	var rows = foo.response.split("\n");
	console.log(rows);
	//get columns
	for (i = 0; i < rows.length; i++) {
		row[i] = rows[i].split("\t");
	}
	
	datapoints = row;
	//remove all the i=1, zeros values.
	for (i = 0; i < datapoints.length; i++) {
		datapoints[i].splice(1, 1);
	}
	datapoints.pop(); //the splitting left out a "" at the end
	$.plot($("#plot-placeholder"), [datapoints]);
}

$(document).ready(function () {
	//bind a handler for the interval radio button's
	$(".interval-rb").change(function () {
		startPlotting();
	});
	startPlotting();
});
</script>
</body>
</html>